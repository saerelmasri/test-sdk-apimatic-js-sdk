/**
 * CELITECH APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, number, object, optional, Schema, string } from '../schema';
import { Esim, esimSchema } from './esim';
import { Package1, package1Schema } from './package1';

export interface Purchase1 {
  /** ID of the purchase */
  id?: string;
  /** Start date of the package's validity in the format 'yyyy-MM-ddThh:mm:ssZZ' */
  startDate?: string;
  /** End date of the package's validity in the format 'yyyy-MM-ddThh:mm:ssZZ' */
  endDate?: string;
  /** Creation date of the purchase in the format 'yyyy-MM-ddThh:mm:ssZZ' */
  createdDate?: string;
  /** Epoch value representing the start time of the package's validity */
  startTime?: number;
  /** Epoch value representing the end time of the package's validity */
  endTime?: number;
  /** Epoch value representing the date of creation of the purchase */
  createdAt?: number;
  mPackage?: Package1;
  esim?: Esim;
  /** The source indicates where the eSIM was purchased, which can be from the API, dashboard, or landing-page. For purchases made before September 8, 2023, the value will be displayed as 'Not available'. */
  source?: string;
}

export const purchase1Schema: Schema<Purchase1> = object({
  id: ['id', optional(string())],
  startDate: ['startDate', optional(string())],
  endDate: ['endDate', optional(string())],
  createdDate: ['createdDate', optional(string())],
  startTime: ['startTime', optional(number())],
  endTime: ['endTime', optional(number())],
  createdAt: ['createdAt', optional(number())],
  mPackage: ['package', optional(lazy(() => package1Schema))],
  esim: ['esim', optional(lazy(() => esimSchema))],
  source: ['source', optional(string())],
});
