/**
 * CELITECH APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { Destinations400Error } from '../errors/destinations400Error';
import { Destinations401Error } from '../errors/destinations401Error';
import {
  DestinationsResponse,
  destinationsResponseSchema,
} from '../models/destinationsResponse';
import { BaseController } from './baseController';

export class DestinationsController extends BaseController {
  /**
   * Name of the destinations
   *
   * @return Response from the API call
   */
  async listDestinations(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<DestinationsResponse>> {
    const req = this.createRequest('GET', '/destinations');
    req.throwOn(400, Destinations400Error, 'Bad Request');
    req.throwOn(401, Destinations401Error, 'Unauthorized');
    return req.callAsJson(destinationsResponseSchema, requestOptions);
  }
}
